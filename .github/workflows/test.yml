name: Run tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  NXF_SINGULARITY_CACHEDIR: ${{ github.workspace }}/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
        # FIXME Flip this off once we get to less than a couple hundred. Adding
        # this so it will only run against changed files. It'll make it much
        # easier to fix these as they come up rather than everything at once.
        with:
          extra_args: ""

  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Install NodeJS
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: "20"

      - name: Install Prettier
        run: npm install -g prettier@3.1.0

      - name: Run Prettier --check
        run: prettier --check .

  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: "20"

      - name: Install editorconfig-checker
        run: npm install -g editorconfig-checker

      - name: Run ECLint check
        run: editorconfig-checker -exclude README.md $(git ls-files | grep -v test)

  nf-test-changes:
    name: nf-test-changes
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'modules' output variable
      modules: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 2 # To retrieve the preceding commit.

      - name: Combine all tags.yml files
        id: get_tags
        run: find . -name "tags.yml" -not -path "./.github/*" -exec cat {} + > .github/tags.yml

      - name: debug
        run: cat .github/tags.yml

      # TODO: change back to using dorny/paths-filter when https://github.com/dorny/paths-filter/pull/133 is implemented
      - uses: mirpedrol/paths-filter@main
        id: filter
        with:
          filters: ".github/tags.yml"
          token: ""

  nf-core-lint:
    runs-on: ubuntu-latest
    name: nf-core-lint
    needs: [nf-test-changes]
    if: ${{ (needs.nf-test-changes.outputs.modules != '[]') }}
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.nf-test-changes.outputs.modules) }}"]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: "3.11"

      - uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Install pip
        run: python -m pip install --upgrade pip

      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Install nf-core tools development version
        run: python -m pip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@dev

      - name: Lint module ${{ matrix.tags }}
        run: nf-core modules lint ${{ matrix.tags }}
        if: ${{ !startsWith(matrix.tags, 'subworkflows/') }}

      - name: Remove substring from matrix.tags
        id: remove_substring
        run: echo subworkflow_names=$(echo "${{ matrix.tags }}" | sed 's/subworkflows\///g') >> $GITHUB_OUTPUT

      - name: Lint subworkflow ${{ matrix.tags }}
        run: nf-core subworkflows lint ${{steps.remove_substring.outputs.subworkflow_names}}
        if: ${{ startsWith(matrix.tags, 'subworkflows/') }}

  nf-test:
    runs-on: ubuntu-latest
    name: nf-test
    needs: [nf-test-changes]
    if: needs.nf-test-changes.outputs.modules != '[]'
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.nf-test-changes.outputs.modules) }}"]
        profile: [conda, docker, singularity]
    env:
      NXF_ANSI_LOG: false
      NFTEST_VER: "0.8.4"

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Install nf-test
        uses: nf-core/setup-nf-test@v1

      - name: Setup apptainer
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-apptainer@main

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        run: |
          mkdir -p $NXF_SINGULARITY_CACHEDIR
          mkdir -p $NXF_SINGULARITY_LIBRARYDIR

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: "3.11"
      - uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4
        id: cache-pip-pdiff
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pdiff
          restore-keys: |
            ${{ runner.os }}-pip-pdiff

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pdiff cryptography

      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@030178870c779d9e5e1b4e563269f3aa69b04081 # v3
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}

      - name: Conda setup
        run: |
          conda clean -a
          conda install -n base conda-libmamba-solver
          conda config --set solver libmamba
          echo $(realpath $CONDA)/condabin >> $GITHUB_PATH
          echo $(realpath python) >> $GITHUB_PATH

      # Test the module
      - name: Run nf-test
        env:
          NFT_DIFF: "pdiff"
          NFT_DIFF_ARGS: "--line-numbers --width 120 --expand-tabs=2"
        run: |
          PROFILE=${{ matrix.profile }}
          NFT_WORKDIR=~ \
          nf-test test \
            --profile=$PROFILE \
            --tag ${{ matrix.tags }} \
            --tap=test.tap \
            --verbose

      - uses: pcolby/tap-summary@0959cbe1d4422e62afc65778cdaea6716c41d936 # v1
        with:
          path: >-
            test.tap

      - name: Clean up
        if: always()
        run: |
          sudo rm -rf /home/ubuntu/tests/

  confirm-pass:
    runs-on: ubuntu-latest
    needs: [pre-commit, prettier, editorconfig, nf-core-lint, nf-test-changes, nf-test]
    if: always()
    steps:
      - name: All tests ok
        if: ${{ success() || !contains(needs.*.result, 'failure') }}
        run: exit 0
      - name: One or more tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: debug-print
        if: always()
        run: |
          echo "toJSON(needs) = ${{ toJSON(needs) }}"
          echo "toJSON(needs.*.result) = ${{ toJSON(needs.*.result) }}"
